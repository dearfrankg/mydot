#!/bin/sh
########################################################################
#
# utility functions
#
########################################################################




#-------------------------------------------------------------------------
# Open finder window at cwd or path
#-------------------------------------------------------------------------
finder() {
    if [[ "$1" ]]; then
        open -a finder $1
    else
        open -a finder $(pwd)
    fi

}

#-------------------------------------------------------------------------
# Prove we can output color
#-------------------------------------------------------------------------
col() {
    echo -e "\033[1;31m$1\033[m"
}

#-------------------------------------------------------------------------
# Pretty print $PATH
#-------------------------------------------------------------------------
path() {                            # show path env data in a nice format
    perl -E ' $data = $ARGV[0]; $data =~ s/:/\n/g; say $data; ' $(echo $PATH)
}

#-------------------------------------------------------------------------------------------------------------
# tree output in color
#-------------------------------------------------------------------------------------------------------------
tree-color() {
    /usr/local/bin/tree -C $@ | less -R
}

#-------------------------------------------------------------------------------------------------------------
# navigate to a directory and show its contents
#-------------------------------------------------------------------------------------------------------------
showdir() {
    cd
    if [ "$1" != "" -a "$2" != "" ]
    then
        DIR="$1/$2*"
        cd $DIR
    elif [ "$1" != "" ]
    then
        DIR="$1*"
        cd $DIR
    fi
    ll
}

#-------------------------------------------------------------------------------------------------------------
# Frank::Utils functions
#-------------------------------------------------------------------------------------------------------------
fg_replace_name() {
    perl -e 'use Frank::Utils qw(:all); reg_replace_file_name(); ' $@
}
fg_replace_text() {
    perl -e 'use Frank::Utils qw(:all); reg_replace_file_text(); ' $@
}
fg_get_from_prompt() {
    perl -e 'use Frank::Utils qw(:all); get_from_prompt(); ' $@
}
fg_versions() {
    perl -e 'use Frank::Utils qw(:all); language_versions(); ' $@
}
fg_append_file() {
    perl -e 'use Frank::Utils qw(:all); append_file(); ' $@
}
fg_prepend_file() {
    perl -e 'use Frank::Utils qw(:all); prepend_file(); ' $@
}
#-------------------------------------------------------------------------------------------------------------


#-------------------------------------------------------------------------------------------------------------
# Prompt functions
#-------------------------------------------------------------------------------------------------------------
promptweb() {
    yesno "Open web page $1" $2 && chrome $1
}

yesno() {                          # prompt return true or false
    if [ "$2" == "" ]; then
        prompt "$1 y/n? [y]"
        case $RESPONSE in
            n|N|no|NO)  return 1 ;;
            *)          return 0 ;;
        esac
    else
        prompt "$1 y/n? [n]"
        case $RESPONSE in
            y|Y|yes|YES)  return 0 ;;
            *)            return 1 ;;
        esac
    fi
}

prompt() {                          # prompt return $RESPONSE
    RESPONSE=""
    echo $1
    read a
    RESPONSE="$a"
}
#-------------------------------------------------------------------------------------------------------------


#-------------------------------------------------------------------------------------------------------------
# Use url to pretty print json
#-------------------------------------------------------------------------------------------------------------
get_json() {
    curl -s $1 | json_xs
}

